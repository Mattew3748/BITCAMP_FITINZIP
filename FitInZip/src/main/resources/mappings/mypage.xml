<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="MypageDAO">
		<!-- 마이페이지 총 갯수 - 총 클래스 신청수  -->
		<select id="mypageInCountCls" parameterType="String" resultType="Integer">
			SELECT COUNT(*) FROM PAYMENT
			WHERE MEM_ID = #{memId}
			AND ORDER_NUM IS NULL
		</select>
		
		<!-- 마이페이지 총 갯수 - 참여 성공률 -->
		<select id="mypageInParticipationRate" parameterType="String" resultType="com.spring.FitInZip.back.mypage.vo.UserCountDTO">
			SELECT SUM(F.CALORIE) AS CALORIE_COUNT, 
			       MAX(F.LAPSE) AS LAPSE_COUNT,
			      (SELECT (SUM(TO_DATE(TO_CHAR(END_TIME, 'HH24MI'), 'HH24MI')-TO_DATE(TO_CHAR(START_TIME, 'HH24MI'), 'HH24MI')))
			       FROM FIT_CLASS F
			       INNER JOIN(SELECT DISTINCT * FROM CHECK_IN  WHERE MEM_ID = #{memId}) C
			       ON F.CLS_CODE = C.CLS_CODE),
			      (SELECT COUNT(*) FROM(SELECT DISTINCT * FROM CHECK_IN WHERE MEM_ID = #{memId})) AS CHECKIN_COUNT,
			      (SELECT COUNT(*) FROM PAYMENT WHERE MEM_ID = #{memId} and ORDER_NUM IS NULL) AS CLSCOUNT,
			      CEIL((SELECT (SUM(TO_DATE(TO_CHAR(END_TIME, 'HH24MI'), 'HH24MI')-TO_DATE(TO_CHAR(START_TIME, 'HH24MI'), 'HH24MI')))
			       FROM FIT_CLASS F
			       INNER JOIN(SELECT DISTINCT * FROM CHECK_IN  WHERE MEM_ID = #{memId}) C
			       ON F.CLS_CODE = C.CLS_CODE) * (SELECT COUNT(*) FROM(SELECT DISTINCT * FROM CHECK_IN WHERE MEM_ID = #{memId}))) AS TIME_COUNT
			FROM PAYMENT P
			INNER JOIN FIT_CLASS F 
			ON P.CLS_CODE = F.CLS_CODE
			INNER JOIN CHECK_IN C 
			ON P.CLS_CODE = C.CLS_CODE
			WHERE P.MEM_ID = #{memId}
			GROUP BY(F.CALORIE)
		</select>
		
	
		<!-- 회원정보 수정하기  -->
		<update id="updateMember" parameterType="com.spring.FitInZip.back.member.vo.MemberVO">
			UPDATE MEMBER SET 
			PHONE = #{phone}, GENDER = #{gender},
			BIRTH = #{birth}, NICKNAME = #{nickname},
			POST = #{post}, ADDR = #{addr}, 
			DETAIL_ADDR = #{detailAddr}, EXTRA_ADDR = #{extraAddr},
			MEM_ORI_NAME = #{profileImgOriginName}, MEM_FILE_NAME = #{profileImgFileName}
			WHERE ID = #{id}
		</update> 
		
		<!-- 현재 클래스 내역 가져오기 -->
		<select id="nowSelectCls" parameterType="com.spring.FitInZip.back.mypage.vo.UserClsDTO" 
			resultType="com.spring.FitInZip.back.mypage.vo.UserClsDTO">
			<choose>
				<when test='clsTimeStatus.equals("now")'>
					SELECT R.*, (SELECT COUNT(*) FROM FIT_CLASS F 
					                    INNER JOIN PAYMENT P
					                ON P.CLS_CODE = F.CLS_CODE
					                    INNER JOIN COMMON C
					                ON F.CLS_CATEGORY = C.COMMON_CODE
					                WHERE P.MEM_ID = #{memId}
					                AND TO_CHAR(F.END_DATE, 'YYYYMMDD') + 1 > TO_CHAR(SYSDATE, 'YYYYMMDD')) AS COUNT
					        FROM(SELECT M.*, ROWNUM AS RNUM
					                FROM(SELECT F.*, P.PAID_PRICE, TO_CHAR(P.PAY_DATE, 'YYYY-MM-DD') AS PAYDATE, C.COMMON_NAME AS METHOD, B.COMMON_NAME AS CATE
					                      ,S.NAME      
                                                FROM PAYMENT P
					                                INNER JOIN FIT_CLASS F 
					                            ON P.CLS_CODE = F.CLS_CODE
					                                INNER JOIN COMMON C
					                            ON p.pay_method = C.COMMON_CODE
					                                INNER JOIN COMMON B
					                            ON f.cls_category = B.COMMON_CODE
                                                    INNER JOIN MEMBER S
                                                        ON F.TRAINER_ID = S.ID
					                            WHERE P.MEM_ID = #{memId}
					                            AND TO_CHAR(F.END_DATE, 'YYYYMMDD') + 1 > TO_CHAR(SYSDATE, 'YYYYMMDD')
					                        ) M         
					            )R
					WHERE RNUM BETWEEN #{startIndex} AND #{endIndex}
				</when>
				<when test='clsTimeStatus.equals("end")'>
					<![CDATA[
						SELECT R.*, (SELECT COUNT(*) FROM FIT_CLASS F 
						                    INNER JOIN PAYMENT P
						                ON P.CLS_CODE = F.CLS_CODE
						                    INNER JOIN COMMON C
						                ON F.CLS_CATEGORY = C.COMMON_CODE
						                WHERE P.MEM_ID = #{memId}
						                AND TO_CHAR(F.END_DATE, 'YYYYMMDD') + 1 < TO_CHAR(SYSDATE, 'YYYYMMDD')) AS COUNT
						        FROM(SELECT M.*, ROWNUM AS RNUM
					                FROM(SELECT F.*, P.PAID_PRICE, TO_CHAR(P.PAY_DATE, 'YYYY-MM-DD') AS PAYDATE, C.COMMON_NAME AS METHOD, B.COMMON_NAME AS CATE
					                      ,S.NAME      
                                                FROM PAYMENT P
					                                INNER JOIN FIT_CLASS F 
					                            ON P.CLS_CODE = F.CLS_CODE
					                                INNER JOIN COMMON C
					                            ON p.pay_method = C.COMMON_CODE
					                                INNER JOIN COMMON B
					                            ON f.cls_category = B.COMMON_CODE
                                                    INNER JOIN MEMBER S
                                                        ON F.TRAINER_ID = S.ID
					                            WHERE P.MEM_ID = #{memId}
					                            AND TO_CHAR(F.END_DATE, 'YYYYMMDD') + 1 < TO_CHAR(SYSDATE, 'YYYYMMDD')
					                        ) M         
					            )R
						WHERE RNUM BETWEEN #{startIndex} AND #{endIndex}
						]]>
				</when>
			</choose>
		</select>
		
		
		<!-- 클래스 입장시 체크인 하기 -->
		<insert id="insertCheckIn" parameterType="com.spring.FitInZip.back.mypage.vo.UserClsDTO">
			INSERT INTO CHECK_IN(CLS_CODE, MEM_ID)
			VALUES(#{clsCode}, #{memId})
		</insert>
		
		<!-- 찜하기 클래스 내역 가지고 오기  -->
		<select id="selectWhishCls" parameterType="com.spring.FitInZip.back.mypage.vo.UserClsDTO" 
			resultType="com.spring.FitInZip.back.mypage.vo.UserClsDTO">
			 SELECT H.* FROM (
				SELECT ROWNUM AS RNUM, P.*
				    FROM(SELECT F.*, C.COMMON_NAME, M.NAME
							FROM FIT_CLASS F
						     	INNER JOIN WISH_CLASS W 
						     ON W.CLS_CODE = F.CLS_CODE
				                INNER JOIN COMMON C
				             ON F.CLS_CATEGORY = C.COMMON_CODE
                                INNER JOIN MEMBER M
				             ON F.TRAINER_ID = M.ID
							     WHERE W.MEM_ID = #{memId}
				        ) P
					)H
				WHERE RNUM BETWEEN #{startIndex} AND #{endIndex}
		</select>
		
		<!-- 찜하기 클래스 없애기  -->
		<delete id="deleteWishCls" parameterType="com.spring.FitInZip.back.mypage.vo.UserClsDTO">
			DELETE FROM WISH_CLASS
			WHERE CLS_CODE = #{clsCode}
			AND MEM_ID = #{memId}
		</delete>
		
		<!-- 쿠폰내역 불러오기  -->
		<select id="couponHistory" parameterType="com.spring.FitInZip.back.mypage.vo.UserCouponDTO"
			resultType="com.spring.FitInZip.back.mypage.vo.UserCouponDTO">
			SELECT C.COUPON_NAME, C.COUPON_CODE, C.DISCOUNT_PRICE, 
			C.COUPON_START_DATE, C.COUPON_END_DATE, O.COMMON_NAME, 
			    (SELECT COUNT(*) 
			        FROM  mem_coupon M
                    INNER JOIN COUPON_INFO C
                    ON C.COUPON_CODE = M.COUPON_CODE
			        WHERE M.MEM_ID = #{memId} 
                    AND (TO_CHAR(C.COUPON_END_DATE,'YYYYMMDD') + 1 > TO_CHAR(SYSDATE,'YYYYMMDD')
                    OR C.COUPON_END_DATE IS NULL)
                    ) AS "UNUSED_COUNT"
			FROM MEM_COUPON M 
			    INNER JOIN COUPON_INFO C
			    ON C.COUPON_CODE = M.COUPON_CODE
			    INNER JOIN COMMON O
			    ON M.COUPON_STATUS = O.COMMON_CODE
			    WHERE M.MEM_ID = #{memId} 
                    AND O.COMMON_CODE = 'CPU01'
                    AND (TO_CHAR(C.COUPON_END_DATE,'YYYYMMDD') + 1 > TO_CHAR(SYSDATE,'YYYYMMDD')
                    OR C.COUPON_END_DATE IS NULL)
		</select>
		
		<!-- 주문조회 불러오기  -->
		<select id="productHistory" parameterType="com.spring.FitInZip.back.mypage.vo.UserProductDTO"
			resultType="com.spring.FitInZip.back.mypage.vo.UserProductDTO">
			SELECT R.*, (SELECT SUM(COUNT(DISTINCT D.ORDER_NUM))
				            FROM ORDER_DETAIL D
				            INNER JOIN PRODUCT P
				            ON D.PRO_NUM = P.PRO_NUM
				            INNER JOIN PAYMENT E
				            ON D.ORDER_NUM = E.ORDER_NUM
                            INNER JOIN COMMON C
                            ON C.COMMON_CODE = E.PAY_METHOD
				        WHERE E.MEM_ID = #{memId}
                        GROUP BY D.ORDER_NUM
                        ) AS COUNT
				FROM(SELECT ROWNUM AS RNUM, M.*
				        FROM (SELECT D.ORDER_NUM, SUM(D.AMOUNT) AS AMOUNT, MAX(D.PRO_NUM) AS PRO_NUM, 
                        MAX(E.PAID_PRICE) AS PAID_PRICE, MAX(E.PAY_DATE) AS PAY_DATE, MAX(P.PRO_NAME) AS PRO_NAME, MAX(P.PRO_IMG) AS PRO_IMG
                        , MAX(C.COMMON_NAME) AS PAYMETHOD
				            FROM ORDER_DETAIL D
				            INNER JOIN PRODUCT P
				            ON D.PRO_NUM = P.PRO_NUM
				            INNER JOIN PAYMENT E
				            ON D.ORDER_NUM = E.ORDER_NUM
                            INNER JOIN COMMON C
                            ON C.COMMON_CODE = E.PAY_METHOD
				        WHERE E.MEM_ID = #{memId}
                        GROUP BY D.ORDER_NUM
				        ) M
				    )R
				WHERE RNUM BETWEEN #{startIndex} AND #{endIndex}
		</select>
		
		<!-- 회원탈퇴시 회원정보 수정 01 - 탈퇴사유가 없는 경우 -->
		<update id="deleteUserNoReason" parameterType="com.spring.FitInZip.back.mypage.vo.UserWithdrawalDTO">
			UPDATE MEMBER
			SET WITHDRAWAL = 'WD01' WITHDRAWAL_REASON = #{withdrawalReason}
			WHERE ID = #{id}
		</update>
		
		<!-- 회원탈퇴시 회원정보 수정 02 - 탈퇴사유가 있 경우 -->
		<update id="deleteUserIsReason" parameterType="com.spring.FitInZip.back.mypage.vo.UserWithdrawalDTO">
			UPDATE MEMBER
			SET WITHDRAWAL = 'WD01', WITHDRAWAL_REASON = #{withdrawalReason}
			, WANT_SAY = #{wantSay}
			WHERE ID = #{id}
		</update>
	</mapper>