<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PayDAO">

	<select id="getPayList" resultType="com.spring.FitInZip.back.cart.vo.CartDTO"
			parameterType="String">
	SELECT P.PRO_IMG, P.PRO_NAME, P.PRO_PRICE, C.AMOUNT, P.PRO_NUM, C.CART_CODE
	FROM CART C
		INNER JOIN MEMBER M
	ON M.ID = C.MEM_ID
		INNER JOIN PRODUCT P
	ON C.PRO_NUM = P.PRO_NUM
	WHERE M.ID = #{memId}
	</select>	

	<!-- 클래스 결제 시 보유한 쿠폰 검색 -->
	<select id="clsPayment" parameterType="memberVO" resultType="com.spring.FitInZip.back.common.vo.PaymentDTO">
		SELECT c.COUPON_CODE, TO_CHAR(NVL(i.COUPON_START_DATE, ''), 'YYYY-MM-DD') as couponStartDate, TO_CHAR(NVL(i.COUPON_END_DATE, '9999-12-31'), 'YYYY-MM-DD') as couponEndDate, i.DISCOUNT_PRICE, i.COUPON_NAME 
 		FROM MEMBER m, MEM_COUPON c, COUPON_INFO i 
 		WHERE m.ID = c.MEM_ID 
        AND c.COUPON_CODE = i.COUPON_CODE 
        AND m.ID = #{id} 
        AND c.COUPON_USE_DATE IS NULL
        AND ((SYSDATE <![CDATA[ >= ]]> i.COUPON_START_DATE AND SYSDATE <![CDATA[ <= ]]> i.COUPON_END_DATE) OR COUPON_START_DATE IS NULL OR COUPON_END_DATE IS NULL)
	</select>
	
	<!-- 보유한 쿠폰 정보 검색 -->
	<select id="couponDetail" parameterType="String" resultType="com.spring.FitInZip.back.common.vo.CouponDetailDTO">
		SELECT COUPON_NAME, COUPON_CODE, DISCOUNT_PRICE, TO_CHAR(NVL(COUPON_START_DATE, ''), 'YYYY-MM-DD') as couponStartDate, TO_CHAR(NVL(COUPON_END_DATE, '9999-12-31'), 'YYYY-MM-DD') as couponEndDate
		FROM COUPON_INFO
		WHERE COUPON_CODE = #{couponCode}
	</select>
	
	<!-- 클래스 결제완료 시 -->
	<insert id="insertClsPayment" parameterType="memberVO">
		INSERT INTO PAYMENT
    	VALUES (PAYMENT_SEQ.NEXTVAL, #{clsCode}, null, #{memId}, #{originPrice}, #{paidPrice}, #{commission}, #{netPrice}, 'PM00', SYSDATE)    	  
	</insert>
	
	<update id="useCoupon" parameterType="com.spring.FitInZip.back.common.vo.MemCouponVO">
		UPDATE MEM_COUPON
        SET COUPON_USE_DATE = SYSDATE
        WHERE MEM_ID = #{memId}
        AND COUPON_CODE = #{couponCode}
	</update>

	<!-- payment 테이블에 주문완료정보 insert -->
	<insert id="insertPayment" parameterType="com.spring.FitInZip.back.payment.vo.PaymentVO">
	INSERT INTO PAYMENT (PAY_INDEX, ORDER_NUM, MEM_ID, ORIGIN_PRICE, PAID_PRICE, PAY_METHOD,PAY_DATE)
	VALUES (PAYMENT_SEQ.nextval , #{orderNum}, #{memId} , #{originPrice}, #{paidPrice}, #{payMethod}, SYSDATE)
	</insert>
	
	<!-- cls결제 후 결제내역 조회 -->
	<select id="selectCls" parameterType="memberVO" resultType="com.spring.FitInZip.back.payment.vo.SelectClsDTO">
		SELECT CLS_CODE, MEM_ID
		FROM PAYMENT
		WHERE MEM_ID = #{id}
	</select>

	<!-- 주문번호 시퀀스  -->
	<select id="propaySequence" resultType="String">
	SELECT PROPAY.NEXTVAL FROM DUAL
	</select>

	<!-- pro_order 테이블에 주문완료정보 insert -->
	<insert id="insertProOrder" parameterType="com.spring.FitInZip.back.order.vo.OrderVO">
	INSERT INTO PRO_ORDER (ORDER_NUM, MEM_ID, TOTAL_PRICE, ORDER_DATE, POSTCODE, ADDRESS, DETAIL_ADDRESS, DIRECT_MSG)
	VALUES ( #{orderNum}, #{memId}, #{totalPrice}, SYSDATE, #{postcode}, #{address}, #{detailAddress}, #{directMsg})
	</insert>
	
	<!-- order_detail 테이블에 주문완료정보 insert -->
	<insert id="insertOrderDetail" parameterType="com.spring.FitInZip.back.order.vo.OrderDetailVO">
	INSERT INTO ORDER_DETAIL (ORDER_NUM, PRO_NUM, AMOUNT)
	VALUES ( #{orderNum}, #{proNum} , #{amount})
	</insert>
	
	<!-- 주문완료시 장바구니 비우기 -->
	<delete id="deleteCart" parameterType="String">
	DELETE FROM CART WHERE MEM_ID = #{memId}
	</delete>
	
	<!-- 주문서 상세페이지  상품 정보-->
	<select id="orderDetail" resultType="com.spring.FitInZip.back.payment.vo.OrderDetailDTO" parameterType="string">
	SELECT D.ORDER_NUM, D.PRO_NUM , D.AMOUNT, P.PRO_IMG, P.PRO_PRICE, P.PRO_NAME
		FROM ORDER_DETAIL D
    	INNER JOIN PRODUCT P
    	ON D.PRO_NUM = P.PRO_NUM
	WHERE D.ORDER_NUM = #{orderNum}
	</select>
	
	<!-- 주문서 상세페이지  배송지, 가격 정보-->
	<select id="orderDetailDeli" resultType="com.spring.FitInZip.back.payment.vo.OrderDetailDeliDTO" parameterType="string">
	SELECT M.NAME, M.PHONE, P.ADDRESS, P.DETAIL_ADDRESS, P.ORDER_NUM, P.DIRECT_MSG, P.ORDER_DATE, 
        A.PAID_PRICE, A.PAY_METHOD, C.COMMON_NAME
	FROM PAYMENT A
	    INNER JOIN MEMBER M
	    ON A.MEM_ID = M.ID
	    INNER JOIN PRO_ORDER P
	    ON A.ORDER_NUM = P.ORDER_NUM
	    INNER JOIN COMMON C
	    ON C.COMMON_CODE = A.PAY_METHOD
		WHERE P.ORDER_NUM = #{ORDERNUM}
	</select>
</mapper>